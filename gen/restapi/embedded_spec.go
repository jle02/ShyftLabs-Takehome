// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Student Result Management System",
    "title": "Student Result Management System",
    "version": "1.0.0"
  },
  "paths": {
    "/courses": {
      "get": {
        "tags": [
          "courses"
        ],
        "operationId": "getCourses",
        "responses": {
          "200": {
            "description": "list the courses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/courseOutput"
              }
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "courses"
        ],
        "operationId": "createCourses",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/courseInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "create course",
            "schema": {
              "$ref": "#/definitions/courseOutput"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/courses/{id}": {
      "delete": {
        "tags": [
          "courses"
        ],
        "operationId": "deleteCourse",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "delete course by id"
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/results": {
      "get": {
        "tags": [
          "results"
        ],
        "operationId": "getResults",
        "responses": {
          "200": {
            "description": "list the results",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/resultOutput"
              }
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/results/score": {
      "get": {
        "tags": [
          "results"
        ],
        "operationId": "getResultsScore",
        "responses": {
          "200": {
            "description": "list the results scores",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/scoreEnum"
              }
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/results/{courseId}/{studentId}": {
      "post": {
        "tags": [
          "results"
        ],
        "operationId": "createResults",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "courseId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "studentId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/resultInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "create a result",
            "schema": {
              "$ref": "#/definitions/resultOutput"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/students": {
      "get": {
        "tags": [
          "students"
        ],
        "operationId": "getStudents",
        "responses": {
          "200": {
            "description": "list the students",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/studentOutput"
              }
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "students"
        ],
        "operationId": "createStudents",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/studentInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "create student",
            "schema": {
              "$ref": "#/definitions/studentOutput"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/students/{id}": {
      "delete": {
        "tags": [
          "students"
        ],
        "operationId": "deleteStudent",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "delete student by id"
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "courseInput": {
      "type": "object",
      "required": [
        "courseName"
      ],
      "properties": {
        "courseName": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "courseOutput": {
      "type": "object",
      "required": [
        "courseName"
      ],
      "properties": {
        "courseName": {
          "type": "string",
          "minLength": 1
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        }
      }
    },
    "error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "resultInput": {
      "type": "object",
      "required": [
        "score"
      ],
      "properties": {
        "score": {
          "$ref": "#/definitions/scoreEnum"
        }
      }
    },
    "resultOutput": {
      "type": "object",
      "required": [
        "studentName",
        "courseName"
      ],
      "properties": {
        "courseId": {
          "type": "integer",
          "format": "int64"
        },
        "courseName": {
          "type": "string",
          "minLength": 1
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "score": {
          "$ref": "#/definitions/scoreEnum"
        },
        "studentId": {
          "type": "integer",
          "format": "int64"
        },
        "studentName": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "scoreEnum": {
      "type": "string",
      "enum": [
        "A",
        "B",
        "C",
        "D",
        "E"
      ]
    },
    "studentInput": {
      "type": "object",
      "required": [
        "firstName",
        "familyName",
        "dateOfBirth",
        "emailAddress"
      ],
      "properties": {
        "dateOfBirth": {
          "type": "string",
          "format": "date"
        },
        "emailAddress": {
          "type": "string",
          "format": "email",
          "example": "user@example.com"
        },
        "familyName": {
          "type": "string",
          "minLength": 1
        },
        "firstName": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "studentOutput": {
      "type": "object",
      "required": [
        "firstName",
        "familyName",
        "dateOfBirth",
        "emailAddress"
      ],
      "properties": {
        "dateOfBirth": {
          "type": "string",
          "format": "date"
        },
        "emailAddress": {
          "type": "string",
          "format": "email",
          "example": "user@example.com"
        },
        "familyName": {
          "type": "string",
          "minLength": 1
        },
        "firstName": {
          "type": "string",
          "minLength": 1
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Student Result Management System",
    "title": "Student Result Management System",
    "version": "1.0.0"
  },
  "paths": {
    "/courses": {
      "get": {
        "tags": [
          "courses"
        ],
        "operationId": "getCourses",
        "responses": {
          "200": {
            "description": "list the courses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/courseOutput"
              }
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "courses"
        ],
        "operationId": "createCourses",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/courseInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "create course",
            "schema": {
              "$ref": "#/definitions/courseOutput"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/courses/{id}": {
      "delete": {
        "tags": [
          "courses"
        ],
        "operationId": "deleteCourse",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "delete course by id"
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/results": {
      "get": {
        "tags": [
          "results"
        ],
        "operationId": "getResults",
        "responses": {
          "200": {
            "description": "list the results",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/resultOutput"
              }
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/results/score": {
      "get": {
        "tags": [
          "results"
        ],
        "operationId": "getResultsScore",
        "responses": {
          "200": {
            "description": "list the results scores",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/scoreEnum"
              }
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/results/{courseId}/{studentId}": {
      "post": {
        "tags": [
          "results"
        ],
        "operationId": "createResults",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "courseId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "studentId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/resultInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "create a result",
            "schema": {
              "$ref": "#/definitions/resultOutput"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/students": {
      "get": {
        "tags": [
          "students"
        ],
        "operationId": "getStudents",
        "responses": {
          "200": {
            "description": "list the students",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/studentOutput"
              }
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "students"
        ],
        "operationId": "createStudents",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/studentInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "create student",
            "schema": {
              "$ref": "#/definitions/studentOutput"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/students/{id}": {
      "delete": {
        "tags": [
          "students"
        ],
        "operationId": "deleteStudent",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "delete student by id"
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "courseInput": {
      "type": "object",
      "required": [
        "courseName"
      ],
      "properties": {
        "courseName": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "courseOutput": {
      "type": "object",
      "required": [
        "courseName"
      ],
      "properties": {
        "courseName": {
          "type": "string",
          "minLength": 1
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        }
      }
    },
    "error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "resultInput": {
      "type": "object",
      "required": [
        "score"
      ],
      "properties": {
        "score": {
          "$ref": "#/definitions/scoreEnum"
        }
      }
    },
    "resultOutput": {
      "type": "object",
      "required": [
        "studentName",
        "courseName"
      ],
      "properties": {
        "courseId": {
          "type": "integer",
          "format": "int64"
        },
        "courseName": {
          "type": "string",
          "minLength": 1
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "score": {
          "$ref": "#/definitions/scoreEnum"
        },
        "studentId": {
          "type": "integer",
          "format": "int64"
        },
        "studentName": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "scoreEnum": {
      "type": "string",
      "enum": [
        "A",
        "B",
        "C",
        "D",
        "E"
      ]
    },
    "studentInput": {
      "type": "object",
      "required": [
        "firstName",
        "familyName",
        "dateOfBirth",
        "emailAddress"
      ],
      "properties": {
        "dateOfBirth": {
          "type": "string",
          "format": "date"
        },
        "emailAddress": {
          "type": "string",
          "format": "email",
          "example": "user@example.com"
        },
        "familyName": {
          "type": "string",
          "minLength": 1
        },
        "firstName": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "studentOutput": {
      "type": "object",
      "required": [
        "firstName",
        "familyName",
        "dateOfBirth",
        "emailAddress"
      ],
      "properties": {
        "dateOfBirth": {
          "type": "string",
          "format": "date"
        },
        "emailAddress": {
          "type": "string",
          "format": "email",
          "example": "user@example.com"
        },
        "familyName": {
          "type": "string",
          "minLength": 1
        },
        "firstName": {
          "type": "string",
          "minLength": 1
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        }
      }
    }
  }
}`))
}
