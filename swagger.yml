consumes:
- application/json
info:
  description: Student Result Management System
  title: Student Result Management System
  version: 1.0.0
paths: 
  /students:
    get:
      tags: 
        - students
      operationId: getStudents
      responses:
        200:
          description: list the students
          schema:
            type: array
            items:
              $ref: "#/definitions/studentOutput"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
    post:
      tags:
        - students
      operationId: createStudents
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/studentInput"
      responses:
        201:
          description: create student
          schema:
            $ref: "#/definitions/studentOutput"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /students/{id}:
    delete:
      tags:
        - students
      operationId: deleteStudent
      parameters:
        - type: integer
          format: int64
          name: id
          in: path
          required: true
      responses:
        204:
          description: delete student by id
        default:
          description: error
          schema:
            $ref: "#/definitions/error"

  /courses:
    get:
      tags: 
        - courses
      operationId: getCourses
      responses:
        200:
          description: list the courses
          schema:
            type: array
            items:
              $ref: "#/definitions/courseOutput"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
    post:
      tags:
        - courses
      operationId: createCourses
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/courseInput"
      responses:
        201:
          description: create course
          schema:
            $ref: "#/definitions/courseOutput"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /courses/{id}:
    delete:
      tags:
        - courses
      operationId: deleteCourse
      parameters:
        - type: integer
          format: int64
          name: id
          in: path
          required: true
      responses:
        204:
          description: delete course by id
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    
  /results:
    get:
      tags: 
        - results
      operationId: getResults
      responses:
        200:
          description: list the results
          schema:
            type: array
            items:
              $ref: "#/definitions/resultOutput"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /results/score:
    get:
      tags: 
        - results
      operationId: getResultsScore
      responses:
        200:
          description: list the results scores
          schema:
            type: array
            items:
              $ref: '#/definitions/scoreEnum'
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /results/{courseId}/{studentId}:
    post:
      tags: 
        - results
      operationId: createResults
      parameters:
        - type: integer
          format: int64
          name: courseId
          in: path
          required: true
        - type: integer
          format: int64
          name: studentId
          in: path
          required: true
        - name: body
          in: body
          schema:
            $ref: "#/definitions/resultInput"
      responses:
        201:
          description: create a result
          schema:
            $ref: "#/definitions/resultOutput"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"

definitions:  
  error:
    type: object
    required:
      - message
    properties:
      code:
        type: integer
        format: int64
      message:
        type: string
  studentOutput:
    type: object
    required:
      - firstName
      - familyName
      - dateOfBirth
      - emailAddress
    properties:
      id:
        type: integer
        format: int64
        readOnly: true
      firstName:
        type: string
        minLength: 1
      familyName:
        type: string
        minLength: 1
      dateOfBirth: 
        type: string
        format: date
      emailAddress: 
        type: string
        format: email
        example: user@example.com
  studentInput:
    type: object
    required:
      - firstName
      - familyName
      - dateOfBirth
      - emailAddress
    properties:
      firstName:
        type: string
        minLength: 1
      familyName:
        type: string
        minLength: 1
      dateOfBirth: 
        type: string
        format: date
      emailAddress: 
        type: string
        format: email
        example: user@example.com
  courseOutput:
    type: object
    required:
      - courseName
    properties:
      id:
        type: integer
        format: int64
        readOnly: true
      courseName:
        type: string
        minLength: 1
  courseInput:
    type: object
    required:
      - courseName
    properties:
      courseName:
        type: string
        minLength: 1
  resultOutput:
    type: object
    required: 
      - studentName
      - courseName
    properties:
      id:
        type: integer
        format: int64
        readOnly: true
      studentId:
        type: integer
        format: int64
      courseId:
        type: integer
        format: int64
      studentName:
        type: string
        minLength: 1
      courseName:
        type: string
        minLength: 1
      score: 
        $ref: '#/definitions/scoreEnum'

  resultInput:
    type: object
    required: 
      - score
    properties:
      score: 
        $ref: '#/definitions/scoreEnum'

  scoreEnum:
    type: string
    enum: [A, B, C, D, E]
      
produces:
- application/json
schemes:
- http
swagger: "2.0"
